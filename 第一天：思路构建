#植物大战僵尸开发笔记
第一天：思路构建
这是一个较大的游戏，从植物种类到地图构造到僵尸种类都很多，需要确定大致开发思路

1.在写中大型项目时，我们一般都会写多个头文件，里面放置很多类的声明，注意这里只声明，不会具体写任何的函数，为什么呢，好处如下：可以很清晰的看到每个类的功能有哪些，包括父类的公共属性和子类的继承属性

2.我们分析游戏的具体玩法和需求，首先应该创造的类应该是炮弹，因为炮弹属性较为单一，并且在pvz_plant头文件里面需要用到炮弹的头文件，因此我们先构建这个类，然后我们分析，尽量归纳出一个炮弹该有的属性：杀伤半径，速度，横坐标，纵坐标，攻击力，这是一个父类炮弹，也就是所有炮弹肯定有的公共属性，这就是继承的好处，所有的属性都可以在子类直接赋值，不需要通过父类创建对象再用对象赋值。

3.创建完类之后就是初始化，就用构造函数以及初始化列表的方法对父类所有属性赋初值为零，属性完成后，我们再来考虑行为，也就是函数，这些都是要继承下去的，首先最重要的肯定就是炮弹的移动逻辑，我们这里先用虚函数声明一个move函数，至于具体的移动逻辑，在后面再写（              ）

4.接下来就是第二个函数，clone函数，这个函数是一个纯虚函数，在基类Shell中被声明为=0，并在派生类中被重写，它的主要目的是创建当前对象的一个副本

这种设计模式通常被称为“原型模式”，通过“克隆”的方法，可以根据已有的对象创建新的对象，而不需要依赖于对象的具体构造函数的复杂参数，例如当你需要动态的创建多个相似但可能有细微差异的对象时很有用。

对该例子的说明：在游戏过程中，可能会有多个相同类型的炮弹不断生成，使用了clone方法后，可以先创建一个Shell1的原型对象，然后再需要新的炮弹时，通过调用clone方法来创建新的炮弹对象，而不是每次都通过构造函数创建，也可以称之为”多态复制“

5.智能指针shared_ptr<Shell>，和new差不多，都是在堆区开辟一片连续的空间，但是无需程序员手动释放内存，clone函数的返回值就是这个指针，就是说调用的时候，Shell1的clone会返回一个Shell1的新实例，并将当前对象的成员变量复制过去，

6.知识点：如果父类有虚函数，那么父类本身不可以再创建对象；

extern用来声明，告诉编译器这个变量会在别的地方定义
7.语法内容
extern vector<shared_ptr<Zombie>>zombies_guide;/
这是语法方面的一个声明，具体意思就是shared_ptr<Zombie>是指向Zombie类对象的指针，意味着

zombies_guide是一个存放指向Zombie对象的指针动态数组，使用智能指针可以让系统自动管理内存，避免内存泄露
